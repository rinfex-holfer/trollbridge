
Рефакторинг
- уничтожение сущностей: персонажи и игровые объекты, удаляясь, должны чистить все свое и своих внутренних компонент (удалять твины, убирать таймауты, и тд)
- async setState портит жизнь - с одной стороны он понадобится
для анимаций переходов между стейтами (возможно), с другой - может ломать логику, которая
предполагает моментальное изменение состояний персонажа
(перс не успевает перейти из FightingIdle в Surrender и начинает атаковать, хотя хиты кончились)
возможное решение: следующий state выставляется, но прежде чем начать исполнение, должен ждать выполнения промиса предыдущего
- State машины должны опционально принимать покрытые типами options
- EntityManager должен универсально и типизированно регистрировать объекты и отдавать их по ключу. Избавиться от ts-ignore
- InteractionManager должен настраиваться снаружи - создание групп интерактивных объектов и активация/деактивация их по ключам

- спрайты должны сами обращаться к методам типа o_.render.moveTo

npm uninstall --save @types/react @types/react-dom @types/react-router-dom @vitejs/plugin-react i18next react react-dom react-redux react-router-dom redux redux-thunk reselect typescript typescript-plugin-css-modules
npm install --save @types/react @types/react-dom @types/react-router-dom @vitejs/plugin-react i18next react react-dom react-router-dom typescript typescript-plugin-css-modules